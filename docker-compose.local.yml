services:
  nextjs:
    build:
      context: ./frontend
      dockerfile: Dockerfile.local
    stdin_open: true
    ports:
      - "3000:3000"

  django:
    build:
      context: ./backend
      dockerfile: Dockerfile.local
    env_file:
      - path: ./.env.local
        required: true
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DEBUG=true
    ports:
      - "8000:8000"

  db:
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - path: ./.env.local
        required: true
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DEBUG: true
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
